class Solution {
    public int minFallingPathSum(int[][] matrix) {
        int n=matrix.length;
        int[][] dp= new int[n][n];
        for(int i=0;i<n;i++)
        dp[0][i]=matrix[0][i];
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<n;j++)
               {
                   int left=matrix[i][j];
                   int mid=matrix[i][j]+dp[i-1][j];
                   int right=matrix[i][j];
                   if(j-1>=0)
                   left=left+dp[i-1][j-1];
                   else
                   left=left+dp[i-1][j];
                   if(j+1<n)
                   right=right+dp[i-1][j+1];
                   else
                   right=right+dp[i-1][j];
                   dp[i][j]=Math.min(left,Math.min(right,mid));
               }
        }
        int ans=dp[n-1][0];
        for(int i=1;i<n;i++)
               {
                   ans=Math.min(ans,dp[n-1][i]);
               }
               return ans;
    }
}
