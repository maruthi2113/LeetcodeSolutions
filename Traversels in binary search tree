/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> ans= new ArrayList<>();
    public List<Integer> preorderTraversal(TreeNode root) {
       pro(root);
        return ans;
    }


     /////////------Preorder------//////////
    public void pro(TreeNode root) 
    {
        if(root==null)
        return;
       
        ans.add(root.val);
         pro(root.left);
        pro(root.right);
    }
    
    /////////------Inorder------//////////
    public void pro(TreeNode root) 
    {
        if(root==null)
        return;
       
      
         pro(root.left);
          ans.add(root.val);
        pro(root.right);
    }
    
    /////////------Postorder------//////////
    public void pro(TreeNode root) 
    {
        if(root==null)
        return;
       
       
         pro(root.left);
        pro(root.right);
         ans.add(root.val);
    }
}
